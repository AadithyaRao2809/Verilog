$date
	Thu Oct 27 15:28:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module comp_test $end
$var wire 4 ! b [3:0] $end
$var reg 4 " a [3:0] $end
$scope module a1 $end
$var wire 4 # in [3:0] $end
$var wire 4 $ out [3:0] $end
$var wire 4 % ones [3:0] $end
$var wire 1 & carry $end
$scope module f1 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 ) cin $end
$var wire 4 * sum [3:0] $end
$var wire 1 & cout $end
$scope module f1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - sum1 $end
$var wire 1 . sum $end
$var wire 1 / carry2 $end
$var wire 1 0 carry1 $end
$var wire 1 1 carry $end
$var wire 1 2 cIn $end
$scope module a1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - s $end
$var wire 1 0 c $end
$scope module carry1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 0 y $end
$upscope $end
$scope module sum1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - y $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 - a $end
$var wire 1 . s $end
$var wire 1 / c $end
$var wire 1 2 b $end
$scope module carry1 $end
$var wire 1 - a $end
$var wire 1 / y $end
$var wire 1 2 b $end
$upscope $end
$scope module sum1 $end
$var wire 1 - a $end
$var wire 1 . y $end
$var wire 1 2 b $end
$upscope $end
$upscope $end
$scope module suma1a2 $end
$var wire 1 0 a $end
$var wire 1 / b $end
$var wire 1 1 y $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 1 cIn $end
$var wire 1 5 sum1 $end
$var wire 1 6 sum $end
$var wire 1 7 carry2 $end
$var wire 1 8 carry1 $end
$var wire 1 9 carry $end
$scope module a1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 s $end
$var wire 1 8 c $end
$scope module carry1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 8 y $end
$upscope $end
$scope module sum1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 y $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 5 a $end
$var wire 1 1 b $end
$var wire 1 6 s $end
$var wire 1 7 c $end
$scope module carry1 $end
$var wire 1 5 a $end
$var wire 1 1 b $end
$var wire 1 7 y $end
$upscope $end
$scope module sum1 $end
$var wire 1 5 a $end
$var wire 1 1 b $end
$var wire 1 6 y $end
$upscope $end
$upscope $end
$scope module suma1a2 $end
$var wire 1 8 a $end
$var wire 1 7 b $end
$var wire 1 9 y $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 9 cIn $end
$var wire 1 < sum1 $end
$var wire 1 = sum $end
$var wire 1 > carry2 $end
$var wire 1 ? carry1 $end
$var wire 1 & carry $end
$scope module a1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < s $end
$var wire 1 ? c $end
$scope module carry1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 ? y $end
$upscope $end
$scope module sum1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 < a $end
$var wire 1 9 b $end
$var wire 1 = s $end
$var wire 1 > c $end
$scope module carry1 $end
$var wire 1 < a $end
$var wire 1 9 b $end
$var wire 1 > y $end
$upscope $end
$scope module sum1 $end
$var wire 1 < a $end
$var wire 1 9 b $end
$var wire 1 = y $end
$upscope $end
$upscope $end
$scope module suma1a2 $end
$var wire 1 ? a $end
$var wire 1 > b $end
$var wire 1 & y $end
$upscope $end
$upscope $end
$scope module h0 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 ) cIn $end
$var wire 1 B sum1 $end
$var wire 1 C sum $end
$var wire 1 D carry2 $end
$var wire 1 E carry1 $end
$var wire 1 2 carry $end
$scope module a1 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B s $end
$var wire 1 E c $end
$scope module carry1 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 E y $end
$upscope $end
$scope module sum1 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B y $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 B a $end
$var wire 1 ) b $end
$var wire 1 C s $end
$var wire 1 D c $end
$scope module carry1 $end
$var wire 1 B a $end
$var wire 1 ) b $end
$var wire 1 D y $end
$upscope $end
$scope module sum1 $end
$var wire 1 B a $end
$var wire 1 ) b $end
$var wire 1 C y $end
$upscope $end
$upscope $end
$scope module suma1a2 $end
$var wire 1 E a $end
$var wire 1 D b $end
$var wire 1 2 y $end
$upscope $end
$upscope $end
$upscope $end
$scope module x0 $end
$var wire 1 F i0 $end
$var wire 1 G i1 $end
$var wire 1 H o $end
$upscope $end
$scope module x1 $end
$var wire 1 I i0 $end
$var wire 1 J i1 $end
$var wire 1 K o $end
$upscope $end
$scope module x2 $end
$var wire 1 L i0 $end
$var wire 1 M i1 $end
$var wire 1 N o $end
$upscope $end
$scope module x3 $end
$var wire 1 O i0 $end
$var wire 1 P i1 $end
$var wire 1 Q o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0Q
1P
1O
0N
1M
1L
1K
1J
0I
0H
1G
1F
0E
0D
1C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
1.
1-
0,
1+
b11 *
1)
b0 (
b10 '
0&
b10 %
b11 $
b1101 #
b1101 "
b11 !
$end
#10
